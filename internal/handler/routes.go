// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	process "codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/apiClipFilm/internal/handler/process"
	task "codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/apiClipFilm/internal/handler/task"
	template "codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/apiClipFilm/internal/handler/template"
	"codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/apiClipFilm/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthToken},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/process/batch",
					Handler: process.VideoBatchHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/process/change",
					Handler: process.VideoChangeHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/process/preview",
					Handler: process.VideoPreviewHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/process/aliVideoCallBack",
				Handler: process.AliVideoCallBackHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthToken},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/task/getTaskSn",
					Handler: task.GetTaskSnHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/task/getTaskVideoList",
					Handler: task.GetTaskVideoListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/task/getTaskVideoStatus",
					Handler: task.GetTaskVideoStatusHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthToken},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/template/list",
					Handler: template.GetTemplateListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthToken},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/bgm/bgm/class/list",
					Handler: template.GetBgmClassListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/bgm/bgm/list",
					Handler: template.GetBgmListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)
}
